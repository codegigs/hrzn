
drop table PRODUCT;
drop table SFDA_LETTERS;
drop table REQUESTS_DETAILS;
drop table DOCUMENTS;
drop table DOCUMENT_TYPE;
drop table REQUESTS;
drop table PAYMENTS;
drop table SERVICES;
drop table COMPANY;
drop table USERS;
/*DROP DATABASE `horizon`;

CREATE SCHEMA `horizon` ; */
/* We will add role in future
CREATE TABLE ROLE (
ROLE_ID INTEGER NOT NULL AUTO_INCREMENT,
ROLE_NAME VARCHAR(200),
PRIMARY KEY (ROLE_ID),
UNIQUE KEY UNI_ROLE_NAME  (ROLE_NAME));
*/
CREATE TABLE USERS (
USER_ID INTEGER NOT NULL AUTO_INCREMENT,
/*ROLE_ID INTEGER,*/
USER_NAME VARCHAR(200),
FIRST_NAME VARCHAR(200),
LAST_NAME VARCHAR(200),
EMAIL VARCHAR(200),
ENABLED TINYINT NOT NULL DEFAULT 1,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
PRIMARY KEY (USER_ID),
UNIQUE KEY UNI_USERNAME_EMAIL  (EMAIL,USER_NAME)
/*CONSTRAINT FK_USERS_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID)*/);

CREATE TABLE COMPANY (
COMPANY_ID INTEGER NOT NULL AUTO_INCREMENT,
NAME VARCHAR(50) NOT NULL UNIQUE,
ADDRESS VARCHAR(400),
CITY VARCHAR(50),
ENABLED TINYINT NOT NULL DEFAULT 1,
CREATED_BY INTEGER,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
PRIMARY KEY (COMPANY_ID),
CONSTRAINT FK_COMPANY_USER_ID FOREIGN KEY (CREATED_BY) REFERENCES USERS (USER_ID));


CREATE TABLE PRODUCT (
PRODUCT_ID INTEGER NOT NULL AUTO_INCREMENT,
PRODUCT_NAME VARCHAR(400),
PRODUCT_TYPE VARCHAR(50),
COMPANY_ID INTEGER,
ENABLED TINYINT NOT NULL DEFAULT 1,
CREATED_BY INTEGER,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
PRIMARY KEY (PRODUCT_ID),
CONSTRAINT FK_PRODUCT_USER_ID FOREIGN KEY (CREATED_BY) REFERENCES USERS (USER_ID),
CONSTRAINT FK_PRODUCT_COMP_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID));

CREATE TABLE SERVICES (
SERVICE_ID INTEGER NOT NULL AUTO_INCREMENT,
SERVICE_NAME VARCHAR(400),
SERVICE_TYPE VARCHAR(50),
ENABLED TINYINT NOT NULL DEFAULT 1,
CREATED_BY INTEGER,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
PRIMARY KEY (SERVICE_ID),
CONSTRAINT FK_USER_ID FOREIGN KEY (CREATED_BY) REFERENCES USERS (USER_ID));

CREATE TABLE PAYMENTS (
PAYMENT_ID INTEGER NOT NULL AUTO_INCREMENT,
PAYMENT_TYPE VARCHAR(400),
NO_OF_INSTALMENTS INTEGER,
PAYMENT_BY INTEGER,
PAYMENT_AMOUNT INTEGER,
CURRENCY_TYPE VARCHAR(10),
ENABLED TINYINT NOT NULL DEFAULT 1,
STATUS VARCHAR(20),
CREATED_BY INTEGER,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
PRIMARY KEY (PAYMENT_ID),
CONSTRAINT FK_PAYMENTS_USER_ID FOREIGN KEY (CREATED_BY) REFERENCES USERS (USER_ID),
CONSTRAINT FK_PAYMENTS_COMPANY_ID FOREIGN KEY (PAYMENT_BY) REFERENCES COMPANY (COMPANY_ID));

CREATE TABLE DOCUMENT_TYPE (
DOCUMENT_TYPE_ID INTEGER NOT NULL AUTO_INCREMENT,
DOCUMENT_TYPE_NAME VARCHAR(200),
PRIMARY KEY (DOCUMENT_TYPE_ID),
UNIQUE KEY UNI_DOCUMENT_TYPE_NAME  (DOCUMENT_TYPE_NAME));


CREATE TABLE REQUESTS (
REQUEST_ID INTEGER NOT NULL AUTO_INCREMENT,
DESCRIPTIONS VARCHAR(200),
SERVICE_ID INTEGER,
COMPANY_ID INTEGER,
/*REQUEST_DETAIL_ID INTEGER, Removed to have multiple details in request
PAYMENT_ID INTEGER, Removed to have multiple payments in request
/*DOCUMENT_ID INTEGER, Removed this column to support multiple documents */
CREATED_BY INTEGER,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
PRIMARY KEY (REQUEST_ID),
CONSTRAINT FK_REQUESTS_USER_ID FOREIGN KEY (CREATED_BY) REFERENCES USERS (USER_ID),
CONSTRAINT FK_REQUESTS_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID),
CONSTRAINT FK_REQUESTS_SERVICE_ID FOREIGN KEY (SERVICE_ID) REFERENCES SERVICES (SERVICE_ID)
/* CONSTRAINT FK_REQUESTS_DOCUMENT_ID FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENTS (DOCUMENT_ID), Removed this column to support multiple documents
CONSTRAINT FK_REQUESTS_PAYMENT_ID FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS (PAYMENT_ID), Removed to have multiple payments in request
CONSTRAINT FK_REQ_REQ_DET_ID  FOREIGN KEY (REQUEST_DETAIL_ID) REFERENCES REQUESTS_DETAILS (REQUEST_DETAIL_ID) Removed to have multiple details in request*/
);

CREATE TABLE DOCUMENTS(
DOCUMENT_ID INTEGER NOT NULL AUTO_INCREMENT,
DOCUMENT_TYPE_ID INTEGER,
REQUEST_ID INTEGER,
PAYMENT_ID INTEGER,
COMPANY_ID INTEGER,
DOCUMENT_NAME VARCHAR(400),
FIELD_DISPLAY_NAME VARCHAR(50),
EXTENSION_TYPE VARCHAR(200),
DOCUMENT_SIZE INTEGER,
/*DOCUMENT_VERSION VARCHAR(50), we look into this afterwards*/
DATA LONGBLOB,
ENABLED TINYINT NOT NULL DEFAULT 1,
CREATED_BY INTEGER,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
PRIMARY KEY (DOCUMENT_ID),
CONSTRAINT FK_DOCUMENTS_USER_ID FOREIGN KEY (CREATED_BY) REFERENCES USERS (USER_ID)
/*CONSTRAINT FK_DOCUMENTS_REQUEST_ID FOREIGN KEY (REQUEST_ID) REFERENCES REQUESTS (REQUEST_ID),
CONSTRAINT FK_DOCUMENTS_PAYMENT_ID FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS (PAYMENT_ID),
CONSTRAINT FK_DOCUMENTS_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID),
CONSTRAINT FK_DOCUMENTS_DOCUMENT_TYPE_ID FOREIGN KEY (DOCUMENT_TYPE_ID) REFERENCES DOCUMENT_TYPE (DOCUMENT_TYPE_ID)*/
);

 CREATE TABLE REQUESTS_DETAILS (
 REQUEST_DETAIL_ID INTEGER NOT NULL AUTO_INCREMENT,
 REQUEST_ID INTEGER,
 SUBMITED_DATE TIMESTAMP,
 REJECTED_DATE TIMESTAMP,
 RESUBMITTED_DATE TIMESTAMP,
 RESUBMTTED_COUNT INTEGER,
 CONTACT_PERSON_NAME VARCHAR(200),
 CONTACT_PERSON_NUMBER VARCHAR(200),
 ENABLED TINYINT NOT NULL DEFAULT 1,
CREATED_BY INTEGER,
CREATED_ON TIMESTAMP,
LAST_UPDATED_ON TIMESTAMP,
ESTIMATED_FDA_APPROVAL_DATE TIMESTAMP,
FDA_APPROVAL_DATE TIMESTAMP,
PRIMARY KEY (REQUEST_DETAIL_ID),
CONSTRAINT FK_REQUESTS_DETAILS_USER_ID FOREIGN KEY (CREATED_BY) REFERENCES USERS (USER_ID),
CONSTRAINT FK_REQUESTS_DETAILS_REQUEST_ID FOREIGN KEY (REQUEST_ID) REFERENCES REQUESTS (REQUEST_ID));



CREATE TABLE SFDA_LETTERS (
SFDA_ID INTEGER NOT NULL AUTO_INCREMENT,
DESCRIPTION VARCHAR(200),
SUBMITTED_LETTER INTEGER,
RECIEVED_LETTER INTEGER,
PRIMARY KEY (SFDA_ID),
CONSTRAINT FK_REQUESTS_SUBMITTED_LETTER FOREIGN KEY (SUBMITTED_LETTER) REFERENCES DOCUMENTS (DOCUMENT_ID),
CONSTRAINT FK_REQUESTS_RECIEVED_LETTER FOREIGN KEY (RECIEVED_LETTER) REFERENCES DOCUMENTS (DOCUMENT_ID));
INSERT INTO `horizon`.`users` (`USER_ID`, `USER_NAME`, `FIRST_NAME`, `LAST_NAME`, `EMAIL`, `ENABLED`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('1', 'admin', 'admin', 'admin', 'mahaaboob@gmail.com', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`document_type` (`DOCUMENT_TYPE_NAME`) VALUES ('PAYMENTS');
INSERT INTO `horizon`.`document_type` (`DOCUMENT_TYPE_NAME`) VALUES ('COMPANY');
INSERT INTO `horizon`.`document_type` (`DOCUMENT_TYPE_NAME`) VALUES ('SFDA');
INSERT INTO `horizon`.`document_type` (`DOCUMENT_TYPE_NAME`) VALUES ('SERVICES');

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('ACCOUNT', 'COSMETICS', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('MANUFACTURE', 'COSMETICS', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('PRODUCTS', 'COSMETICS', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('WAREHOUSE', 'COSMETICS', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('PRODUCTS', 'LISTINGS', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('PRODUCTS', 'PCS', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('DENR', 'DRUG', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('SDR', 'DRUG', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('PRODUCTS', 'DRUG', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('DENR', 'HEALTH', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('SDR', 'HEALTH', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('PRODUCTS', 'HEALTH', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('DENR', 'HERBAL', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('SDR', 'HERBAL', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('PRODUCTS', 'HERBAL', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('SPECIAL FOOD', 'FOOD', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('REGULAR FOOD', 'FOOD', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('MDNR', 'MEDICAL DEVICE', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('AR', 'MEDICAL DEVICE', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('MDEL', 'MEDICAL DEVICE', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('MDMA', 'MEDICAL DEVICE', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('MDIL', 'MEDICAL DEVICE', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());
INSERT INTO `horizon`.`services` (`SERVICE_NAME`, `SERVICE_TYPE`, `ENABLED`, `CREATED_BY`, `CREATED_ON`, `LAST_UPDATED_ON`) VALUES ('MDC', 'MEDICAL DEVICE', '1', '1', CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP());

